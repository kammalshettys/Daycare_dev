/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dayCareUI;

import static models.Demo.studentRatioRules;
import models.School;
import models.Student;

import java.awt.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * 
 */
public class SummaryPage extends JPanel {

    /**
     * Creates new form SummaryPage
     */
    School instance;
    private JLabel jLabel;
    private JPanel jPanel;
    private JScrollPane jScrollPane;
    private JTable summaryTable;
    public SummaryPage() {
        initComponents();
        instance = School.getInstance();
        Map<String, Integer> studentDistribution = this.getAgeDistribution(instance.getStudents());
        Map<String, Integer> groupDistribution = this.getGroupsDistribution(studentDistribution);
        this.populateTable(groupDistribution);
    }

    public Map<String, Integer> getAgeDistribution(List<Student> studentList){
        Map<String, Integer> studentDistribution = new HashMap<String, Integer>();
        for(Student student : studentList){
            if (studentDistribution.containsKey(student.getAgeGroup())) {

                studentDistribution.put(student.getAgeGroup(),
                        studentDistribution.get(student.getAgeGroup()) + 1);
            }
            else {

                studentDistribution.put(student.getAgeGroup(), 1);
            }

        }
        return studentDistribution;
    }

    public Map<String, Integer> getGroupsDistribution(Map<String, Integer> studentDistribution){
        Map<String, Integer> groupDistribution = new HashMap<String, Integer>();

        for (Map.Entry entry : studentDistribution.entrySet()) {
            int maxSize = studentRatioRules.get(entry.getKey());
            System.out.println("Processing for Key : " + entry.getKey());
                groupDistribution.put(entry.getKey().toString(),
                     1 + (Integer.parseInt(entry.getValue().toString())/ maxSize));
        }
        return groupDistribution;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jPanel = new JPanel();
        jScrollPane = new JScrollPane();
        summaryTable = new JTable();
        jLabel = new JLabel();

        jPanel.setBackground(new Color(255, 255, 255));

        summaryTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Age(Months)", "Number of Groups"
            }
        ));
        jScrollPane.setViewportView(summaryTable);

        jLabel.setFont(new Font("Serif", 0, 18)); // NOI18N
        jLabel.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel.setText("SUMMARY PAGE ");

        GroupLayout jPanelLayout = new GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel, GroupLayout.PREFERRED_SIZE, 506, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jScrollPane, GroupLayout.PREFERRED_SIZE, 680, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel)
                .addGap(72, 72, 72)
                .addComponent(jScrollPane, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(262, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }

    public void populateTable(Map<String, Integer> groupDistribution){
        DefaultTableModel dtm = (DefaultTableModel) summaryTable.getModel();
        dtm.setRowCount(0);
        for (Map.Entry entry : groupDistribution.entrySet()) {
            Object [] row = new Object[2];
            row[0] = entry.getKey().toString();
            row[1] = entry.getValue().toString();
            dtm.addRow(row);
        }

    }
}
